{"version":3,"file":"251.blog.js","mappings":"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","sources":["webpack://movieflix-app/./src/components/MoviePage.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport '../../styles/moviePage.scss';\nimport ContentList from \"./ContentList\";\nconst MoviePage = ({ movie }) => {\n    let [movieList, setMovieList] = useState([]);\n    // let [filterNameSelected, setFilterNameSelected] = useState<string>('now_playing');\n    let [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    let [page, setPage] = useState(1);\n    let [startNum, setStartNum] = useState(1);\n    let [lastNum, setlastNum] = useState(10);\n    let [newNumberArr, setNewNumberArr] = useState([]);\n    let [genreUrlId, setGenreUrlId] = useState('');\n    let [genreList, setGenreList] = useState([]);\n    // let [genreListModify, setGenreListModify] = useState<Array<genreResponseModify>>([]);\n    // const [selectedGenreIds, setSelectedGenreIds] = useState<Array<number>>([]);\n    let numberArr = [];\n    const generateNum = (a, b) => {\n        for (let i = a; i < b; i++) {\n            numberArr.push(i);\n            console.log(a, b, i, 'genearted2');\n        }\n        setNewNumberArr(numberArr);\n    };\n    console.log(numberArr);\n    const pageClick = (ele) => {\n        let num = Number(ele.target.textContent);\n        setPage(num);\n    };\n    console.log(page, 'page');\n    const initialNumGenerator = () => {\n        setlastNum(lastNum + 10);\n        setStartNum(lastNum);\n        setPage(lastNum);\n    };\n    const previousNumGenerator = () => {\n        setlastNum(lastNum - 10);\n        if (startNum != 10) {\n            setStartNum(startNum - 10);\n        }\n        else {\n            setStartNum(startNum - 9);\n        }\n        setPage(lastNum - 11);\n    };\n    console.log(startNum, 'startNum');\n    console.log(lastNum, 'lastNum');\n    const movieListFetch = async () => {\n        try {\n            let response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=3e85d84a2d3e58168179cf80ecdecea5&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreUrlId}`);\n            console.log(response);\n            setMovieList(response?.data.results);\n        }\n        catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(() => {\n        movieListFetch();\n        generateNum(startNum, lastNum);\n        setIsDropdownOpen(false);\n    }, [page, startNum, lastNum, genreUrlId]);\n    useEffect(() => {\n        generFetch();\n    }, []);\n    const generFetch = async () => {\n        try {\n            let response = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=3e85d84a2d3e58168179cf80ecdecea5`);\n            console.log(\"response\", response?.data?.genres);\n            let responseArr = response?.data?.genres;\n            let newArr = responseArr.map((ele, index) => {\n                return { ...ele, toggle: false };\n            });\n            setGenreList(newArr);\n        }\n        catch (error) {\n            console.log(error);\n        }\n    };\n    const handleGenreChange = (indexPassed) => {\n        // const updatedCheckdState =  isChecked.map((ele, index)=>{\n        //    return indexPassed ===index ? !ele : ele;\n        // })\n        // console.log(updatedCheckdState, 'updatedCheckdState')\n        // setIsChecked(updatedCheckdState);\n        const updatedgenreListModify = genreList.map((ele, index) => {\n            // return  indexPassed ===index ? !ele : ele;\n            if (indexPassed === index) {\n                return {\n                    ...ele,\n                    toggle: !ele.toggle,\n                };\n            }\n            else {\n                return ele;\n            }\n        });\n        console.log(updatedgenreListModify, 'updatedgenreListModify');\n        setGenreList(updatedgenreListModify);\n        // setTimeout(()=>{\n        //   let x= selectedGenreId();\n        //   console.log(x, \"x\");\n        // }, 10000);\n    };\n    const filteredGenreId = () => {\n        let fValue = genreList.filter(ele => {\n            if (ele.toggle === true) {\n                return ele;\n            }\n            ;\n        });\n        return fValue.map(ele => ele.id);\n    };\n    let stringGenreIdArr;\n    const stringGenreId = (stringGenreIdArr) => {\n        if (stringGenreIdArr.length < 1)\n            setGenreUrlId('');\n        else\n            setGenreUrlId(stringGenreIdArr.join(','));\n    };\n    console.log();\n    // let indexSelectedArray=[];\n    useEffect(() => {\n        stringGenreIdArr = filteredGenreId();\n        console.log(stringGenreIdArr, \"stringGenreIdArr\");\n        stringGenreId(stringGenreIdArr);\n        // setSelectedGenreIds(x)\n    }, [genreList]);\n    const handleDropdown = () => {\n        // for (let i=0; i<genreList.length; i++){\n        //     isChecked.push(false)\n        // }\n        // setIsChecked(new Array(genreList.length).fill(false));\n        setIsDropdownOpen(!isDropdownOpen);\n        //   let newArr=  genreList.map((ele, index)=>{\n        //      return {...ele, toggle:false};\n        //   });\n        //   setGenreListModify(newArr);\n    };\n    return (_jsxs(\"div\", { children: [_jsx(Header, {}), _jsxs(\"div\", { className: 'MovieWrapper', children: [_jsxs(\"div\", { className: 'filterSection', children: [_jsx(\"h2\", { children: \"Popular Movie\" }), _jsx(\"div\", { className: 'genreFilter', children: _jsxs(\"div\", { className: 'actualFilter', children: [_jsx(\"button\", { onClick: handleDropdown, children: \"Genre\" }), isDropdownOpen && _jsx(\"div\", { className: 'dropdownContainer', children: _jsx(\"ul\", { children: genreList.map((ele, index) => {\n                                                    return (_jsxs(\"li\", { children: [_jsx(\"input\", { type: 'checkbox', onChange: () => handleGenreChange(index), checked: ele.toggle }), \"  \", ele.name] }, index));\n                                                }) }) })] }) })] }), movieList.length > 1 ? _jsx(\"div\", { className: 'listSection', children: _jsx(ContentList, { movieList: movieList, movie: movie }) }) : _jsx(\"h3\", { children: \"No Data Found.\" }), _jsxs(\"div\", { className: 'paginationSection', children: [startNum > 1 && _jsx(\"button\", { className: 'previousSet', onClick: previousNumGenerator, children: \"Previous Set\" }), _jsx(\"div\", { className: 'numberButtonSection', children: newNumberArr.slice(0, 10).map((ele, index) => {\n                                    return (_jsx(\"button\", { className: page === ele ? 'active' : '', onClick: (ele) => pageClick(ele), children: ele }, index));\n                                }) }), _jsx(\"button\", { className: 'nextSet', onClick: initialNumGenerator, children: \"Next Set\" })] })] })] }));\n};\nexport default MoviePage;\n"],"names":["movie","movieList","setMovieList","useState","isDropdownOpen","setIsDropdownOpen","page","setPage","startNum","setStartNum","lastNum","setlastNum","newNumberArr","setNewNumberArr","genreUrlId","setGenreUrlId","genreList","setGenreList","numberArr","console","log","useEffect","async","response","get","data","results","error","movieListFetch","a","b","i","push","generateNum","generFetch","genres","responseArr","newArr","map","ele","index","toggle","stringGenreIdArr","filter","id","length","join","stringGenreId","children","className","onClick","type","onChange","indexPassed","updatedgenreListModify","handleGenreChange","checked","name","slice","num","Number","target","textContent","pageClick"],"sourceRoot":""}